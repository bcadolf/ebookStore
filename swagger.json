{
  "swagger": "2.0",
  "info": {
    "title": "ebookstore Api",
    "description": "ebookstore Api",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/github/callback": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/login": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/books/add": {
      "post": {
        "tags": ["Books"],
        "summary": "Insert a new book into the database",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "ObjectId"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/books/bulk": {
      "post": {
        "tags": ["Books"],
        "summary": "Insert multiple books into the database",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Books"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Books inserted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "newBookIds": {
                  "type": "array",
                  "example": ["ObjectId"],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to add books"
          }
        }
      }
    },
    "/books/{id}": {
      "put": {
        "tags": ["Books"],
        "summary": "Update a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Book updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Failed to update book"
          }
        }
      },
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book found",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully"
          },
          "400": {
            "description": "Invalid ID format"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Failed to delete book"
          }
        }
      }
    },
    "/books/update/{id}": {
      "post": {
        "tags": ["Books"],
        "summary": "Update a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Book updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Failed to update book"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/books/": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books in the database",
        "description": "",
        "responses": {
          "200": {
            "description": "List of books",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Books"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No books found"
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a user",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in the database",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/bulk": {
      "post": {
        "tags": ["Users"],
        "summary": "Register multiple users",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user given their ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user given their ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/cart/": {
      "post": {
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cart/{id}": {
      "put": {
        "tags": ["Cart"],
        "summary": "Update a cart by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the cart to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "books": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "example": {
                          "type": "object",
                          "properties": {
                            "bookId123": {
                              "type": "number",
                              "example": 1
                            },
                            "bookId456": {
                              "type": "number",
                              "example": 2
                            }
                          }
                        }
                      }
                    },
                    "totalPrice": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": ["userId", "books", "totalPrice"],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Cart updated."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Cart not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Failed to update the cart",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to update the cart."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete a cart by ID",
        "description": "Deletes a cart from the database using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the cart to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Cart deleted"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid cart ID format"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Cart not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Failed to delete cart",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/review/": {
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/review/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Books": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "The Silent Shore"
        },
        "author": {
          "type": "string",
          "example": "Elaine Morgan"
        },
        "stock": {
          "type": "number",
          "example": 3
        },
        "pages": {
          "type": "number",
          "example": 310
        },
        "description": {
          "type": "string",
          "example": "A gripping tale of survival and secrets on a desolate coastline."
        },
        "genre": {
          "type": "string",
          "example": "Mystery"
        },
        "tags": {
          "type": "array",
          "example": ["suspense", "thriller", "coastal"],
          "items": {
            "type": "string"
          }
        },
        "price": {
          "type": "number",
          "example": 14.99
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "TestUser"
        },
        "password": {
          "type": "string",
          "example": "ThisIsAPassword"
        },
        "email": {
          "type": "string",
          "example": "example@test.com"
        },
        "shipping_address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "example": "123 Roosevelt Lane"
            },
            "city": {
              "type": "string",
              "example": "Anchorage"
            },
            "state": {
              "type": "string",
              "example": "AK"
            },
            "zip": {
              "type": "string",
              "example": "99501"
            }
          }
        }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "643a6b29f3d5b8d2d8e4d531"
        },
        "books": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "643a6b29f3d5b8d2d8e4d531"
            },
            "quantity": {
              "type": "number",
              "example": 1
            }
          }
        },
        "totalPrice": {
          "type": "number",
          "example": 49.98
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Excellent read"
        },
        "comment": {
          "type": "string",
          "example": "I really enjoyed the character development and plot."
        },
        "rating": {
          "type": "number",
          "example": 4.5
        },
        "author": {
          "type": "string",
          "example": "609e12672f8fb814c89f9e3b"
        },
        "bookId": {
          "type": "string",
          "example": "609e127b2f8fb814c89f9e3d"
        }
      }
    }
  }
}
